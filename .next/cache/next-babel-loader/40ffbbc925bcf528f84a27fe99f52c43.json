{"ast":null,"code":"var _jsxFileName = \"/Users/mullens/corona/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, props.shows.map(e => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 30\n    }\n  }, e))));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/mullens/corona/pages/index.tsx"],"names":["fetch","Index","props","shows","map","e","getInitialProps","res","data","json","console","log","length","entry","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAgB;AAC5B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,CAAN,CAArB,CAAJ,CADK,CAAP;AAGD,CAJD;;AAMAJ,KAAK,CAACK,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMQ,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAEK,IAAI,CAACJ,GAAL,CAASS,KAAK,IAAIA,KAAK,CAACC,IAAxB;AADF,GAAP;AAGD,CATD;;AAWA,eAAeb,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nconst Index = (props: any) => {\n  return <div>\n    <p>{props.shows.map(e => <div>{e}</div>)}</p>\n  </div>\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}