{"version":3,"file":"static/webpack/static/development/pages/index.js.80d71fd6105761e42c38.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { Charts, ChartContainer, ChartRow, YAxis, Resizable, BarChart } from \"react-timeseries-charts\";\nimport { TimeSeries, TimeRange, Index as PondIndex } from \"pondjs\";\n\nconst Index = (props: { data: any }) => {\n\n  const data = props.data.filter()\n\nconst timeseries = new TimeSeries({\n  name: \"hilo_rainfall\",\n  columns: [\"index\", \"precip\"],\n  points: data.map(([d, value]) => [\n      (PondIndex.getIndexString as any)(\"1h\", new Date(d)),\n      value\n  ])\n});\n\n  return <div>\n    <Resizable>\n      <ChartContainer timeRange={timeseries.timerange()} >\n        <ChartRow height=\"150\">\n          <YAxis\n            id=\"rain\"\n            label=\"Rainfall (inches/hr)\"\n            min={0}\n            max={1.5}\n            format=\".2f\"\n            width=\"70\"\n            type=\"linear\"\n          />\n          <Charts>\n            <BarChart\n              axis=\"rain\"\n              spacing={1}\n              columns={[\"precip\"]}\n              series={timeseries}\n            />\n          </Charts>\n        </ChartRow>\n      </ChartContainer>\n    </Resizable>\n    {/* <p>{JSON.stringify(props.timeseries)}</p> */}\n    <div>{JSON.stringify(props.data)}</div>\n  </div>\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv');\n  // const data = await res.json();\n\n  const text = await res.text();\n  const [headings, ...data] = text.split('\\n');\n  const table = data.filter(e => e.includes('San Francisco')).map(e => e.split(','))\n\n  const data2 = [\n    [\"2017-01-24T00:00\", 0.01],\n    [\"2017-01-24T01:00\", 0.13],\n    [\"2017-01-24T02:00\", 0.07],\n    [\"2017-01-24T03:00\", 0.04],\n    [\"2017-01-24T04:00\", 0.33],\n  ];\n\n\n  // const timeseries = new TimeSeries(seriesData);\n\n  return {\n    data: table,\n  };\n};\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AATA;AAoBA;AADA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;;;;A","sourceRoot":""}